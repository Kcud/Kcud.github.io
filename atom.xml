<?xml version="1.0" encoding="utf-8"?>
<feed xmlns="http://www.w3.org/2005/Atom">
    <id>https://kcud.github.io/</id>
    <title>花花的小窝</title>
    <updated>2022-06-04T05:45:07.230Z</updated>
    <generator>https://github.com/jpmonette/feed</generator>
    <link rel="alternate" href="https://kcud.github.io/"/>
    <link rel="self" href="https://kcud.github.io/atom.xml"/>
    <subtitle>温故而知新</subtitle>
    <logo>https://kcud.github.io/images/avatar.png</logo>
    <icon>https://kcud.github.io/favicon.ico</icon>
    <rights>All rights reserved 2022, 花花的小窝</rights>
    <entry>
        <title type="html"><![CDATA[排序]]></title>
        <id>https://kcud.github.io/post/pai-xu/</id>
        <link href="https://kcud.github.io/post/pai-xu/">
        </link>
        <updated>2022-06-03T14:42:50.000Z</updated>
        <content type="html"><![CDATA[<p>快速排序</p>
<pre><code class="language-c">#include &lt;stdio.h&gt;
#include &lt;stdlib.h&gt;


void quick_sort(int *array, int l, int r)
{
    int left =l;                //获取左下标 右下标
    int right = r;
    int pivot = array[left];    //对比用的标记
    if(left &gt;= right)           // 如果 左下标 &gt;= 右下标 则此区域排序结束
        return;
    while(left &lt; right)         //如果 左下标 小于 右下标
    {
        while(left &lt; right &amp;&amp; array[right] &gt;= pivot)    //在(left,right]区间 找到一个 小于 标记的数
        {
            right--;
        }
        if(left &lt; right)                                //判断是否 left right 是否合法
        {
            array[left] = array[right];                 //将小于 标记的数 放到数组的左边
        }
        while(left &lt; right &amp;&amp; array[left] &lt;= pivot)     //在(left,right]区间 找到一个 大于 标记的数
        {
            left++;
        }
        if(left &lt; right)                                //判断是否 left right 是否合法
        {
            array[right] = array[left];                 //将大于 标记的数 放到数组的右边
        }
        if(left == right)                               //当 left 与 right 重合
        {
            array[left] = pivot;                        // 将 标记数 移动到 重合的位置
        }
    }
    quick_sort(array,l,right-1);                        //递归 排序左右子区间
    quick_sort(array,right+1,r);

}

int main()
{
    int a[10],i;
    for(i = 0; i &lt; 10; i++)
        scanf(&quot;%d&quot;,&amp;a[i]);
    quick_sort(a,0,9);
    for(i = 0; i &lt; 10; i++)
        printf(&quot;%d &quot;,a[i]);
    return 0;
}

</code></pre>
<p>插入排序</p>
<pre><code class="language-c">#include &lt;stdio.h&gt;
#include &lt;stdlib.h&gt;

void insert_sort(int *array, int array_len)
{
    int i, j, key_number;
    for(i = 1; i &lt; array_len; i++)          //外循环 元素为1时默认有序 所以下标从 1 开始
    {
        key_number = array[i];              //将 i 上的值作为待排序值
        j = i - 1;                          //我们要将 待排序值 插入到 [0,i-1] 的位置上
        while(j &gt;= 0 &amp;&amp; array[j] &gt; key_number)  //找到比待插入值小的值
        {
            array[j+1] = array[j];
            j--;
        }
        array[j+1] = key_number;  //将待插入值 插入 因为 while 循环每次会 j-- 所以我们离正确的插入位置少了1
    }
}


int main()
{

    int a[10] = {1,4,7,2,5,8,3,6,9}, i;
    insert_sort(a,9);
    for(i = 0; i &lt; 9; i++)
        printf(&quot;%d &quot;,a[i]);
}

</code></pre>
<p>归并排序</p>
<pre><code class="language-c">#include &lt;stdio.h&gt;
#include &lt;stdlib.h&gt;

void merge(int * array, int * temp_array, int left, int mid, int right) //合并
{
    int left_flag, right_flag, temp_index;
    left_flag = left;       //左半区第一个元素
    right_flag = mid + 1;   //右半区第一个元素
    temp_index = left;		//临时数组的下标
    while(left_flag &lt;= mid &amp;&amp; right_flag &lt;= right)	//将左半区和右半区的数组合并到 temp_array
    {
        if(array[left_flag] &lt; array[right_flag])
        {
            temp_array[temp_index] = array[left_flag];
            left_flag++;
        }
        else
        {
            temp_array[temp_index] = array[right_flag];
            right_flag++;
        }
        temp_index++;
    }
    while(left_flag &lt;= mid)						//如果左半区还有剩余元素依次合并到 temp_array
    {
        temp_array[temp_index] = array[left_flag];
        left_flag++;
        temp_index++;
    }
    while(right_flag &lt;= right)					//如果右半区还有剩余元素依次合并到 temp_array
    {
        temp_array[temp_index] = array[right_flag];
        right_flag++;
        temp_index++;
    }
    while(left &lt;= right)						//将合并好的 temp_array 赋值给 array
    {
        array[left] = temp_array[left];
        left++;
    }
}

void split(int * array, int * temp_array, int left, int right)     //分治
{
    int mid;
    if(left &lt; right)            //如果元数组长度大于 1
    {
        mid = ( left + right ) / 2;
        split(array, temp_array, left, mid);
        split(array, temp_array, mid+1, right);
        merge(array, temp_array,left,mid,right);
    }


}

void merge_sort(int *array, int len)
{
    int * temp_array = (int*)malloc(len * sizeof(int));
    split(array, temp_array, 0, len-1);
    free(temp_array);
}

int main()
{
    int a[10] = {1,4,7,2,5,8,3,6,9}, i;
    merge_sort(a,9);
    for(i = 0; i &lt; 9; i++)
        printf(&quot;%d &quot;,a[i]);
    return 0;
}

</code></pre>
<p>希尔排序</p>
<pre><code class="language-c">#include &lt;stdio.h&gt;
#include &lt;stdlib.h&gt;
void shell_sort(int *array, int len)
{
    int i, j, interval, key_number;
    interval = len / 2;
    while(interval &gt; 0)     //间隔 &gt; 0
    {
        for(i = interval; i &lt; len; i++) //插入排序
        {
            key_number = array[i];
            j = i-interval;
            while(j &gt;= interval &amp;&amp; array[j] &gt; key_number)
            {
                array[j+interval] = array[j];
                j = j - interval;
            }
            array[j+interval] = key_number;
        }
        interval = interval / 2;    //设置间隔 
    }
}

int main()
{
    int a[10] = {1,4,7,2,5,8,3,6,9}, i;
    shell_sort(a,9);
    for(i = 0; i &lt; 9; i++)
        printf(&quot;%d &quot;,a[i]);

    return 0;
}

</code></pre>
]]></content>
    </entry>
    <entry>
        <title type="html"><![CDATA[ REST 风格]]></title>
        <id>https://kcud.github.io/post/rest-feng-ge/</id>
        <link href="https://kcud.github.io/post/rest-feng-ge/">
        </link>
        <updated>2022-05-27T15:17:28.000Z</updated>
        <content type="html"><![CDATA[<h1 id="rest-风格">REST 风格</h1>
<h2 id="请求工具">请求工具</h2>
<p><a href="https://www.postman.com/">postman</a></p>
<p>传统描述</p>
<pre><code class="language-http">http://localhost/user/getById?id=1
http://localhost/user/saveUser
</code></pre>
<p>REST 描述</p>
<pre><code class="language-http">http://localhost/user/1		
http://localhost/user
</code></pre>
<p>隐藏 行为</p>
<table>
<thead>
<tr>
<th>请求</th>
<th>操作</th>
</tr>
</thead>
<tbody>
<tr>
<td>GET</td>
<td>查询</td>
</tr>
<tr>
<td>POST</td>
<td>( 新增/保存 )</td>
</tr>
<tr>
<td>PUT</td>
<td>修改</td>
</tr>
<tr>
<td>DELETE</td>
<td>删除</td>
</tr>
</tbody>
</table>
<pre><code class="language-java">@RequestMapping(value=&quot;/users&quot;, method = RequestMethod.POST)

@RequestMapping(value=&quot;/users/{id}&quot;, method = RequestMethod.DELETE)
@ResponseBody
public String delete(@PathVariable Integer id){		//增加 PathVariable 注解
  //....
  return &quot;{'xxxx':'xxx'}&quot;;
}
</code></pre>
<table>
<thead>
<tr>
<th>注解</th>
<th>功能</th>
<th>场景</th>
</tr>
</thead>
<tbody>
<tr>
<td>@ResponseBody</td>
<td>用于接收json数据</td>
<td>数据多</td>
</tr>
<tr>
<td>@RequestParam</td>
<td>用于接收url地址参数或表单</td>
<td>使用的少</td>
</tr>
<tr>
<td>@PathVariable</td>
<td>用于接收地址参数 {参数名称}</td>
<td>数据少</td>
</tr>
</tbody>
</table>
<h2 id="简化">简化</h2>
<p>去除重复的value</p>
<pre><code class="language-java">//在类名使用
@RequestMapping(&quot;xxxs&quot;)
@@ResponseBody
@RestController	//使用这个注解 @Controller 和 @ResponeBody 可以不再写 

//修改 删除
@RequestMapping(value=&quot;/{id}&quot;, method = RequestMethod.DELETE)
//可以简写为
@DeleteMapping(&quot;/{id}&quot;)

@RequestMapping( method = RequestMethod.POST)
//修改为
@PostMapping
</code></pre>
]]></content>
    </entry>
    <entry>
        <title type="html"><![CDATA[Cpolar 实现内网穿透]]></title>
        <id>https://kcud.github.io/post/cpolar-shi-xian-nei-wang-chuan-tou/</id>
        <link href="https://kcud.github.io/post/cpolar-shi-xian-nei-wang-chuan-tou/">
        </link>
        <updated>2022-05-08T07:50:17.000Z</updated>
        <content type="html"><![CDATA[<h2 id="使用-cpolar-实现内网穿透">使用 Cpolar 实现内网穿透</h2>
<p><a href="https://www.cpolar.com/download">下载地址</a></p>
<p>下载完成后</p>
<img src="https://note.youdao.com/yws/api/personal/file/8C0925D66F9E4254BC01769BEC56ED19?method=download&shareKey=f70228df8a9ecec32258bd3da19f6f1c"/>
<img src="https://note.youdao.com/yws/api/personal/file/4CE1B10730154B918D6AA07E250EF31B?method=download&shareKey=f70228df8a9ecec32258bd3da19f6f1c"/>
<img src="https://note.youdao.com/yws/api/personal/file/ECCC9BFB86E440EE8CD26559B4F947C2?method=download&shareKey=f70228df8a9ecec32258bd3da19f6f1c"/>
<img src="https://note.youdao.com/yws/api/personal/file/15BEC6C843FA41298462DAC642DAE2B2?method=download&shareKey=f70228df8a9ecec32258bd3da19f6f1c"/>
<img src="https://note.youdao.com/yws/api/personal/file/43838C7C4A74482ABADC80357016A7E9?method=download&shareKey=f70228df8a9ecec32258bd3da19f6f1c"/>]]></content>
    </entry>
    <entry>
        <title type="html"><![CDATA[Python pip 时由于目标计算机积极拒绝,无法连接]]></title>
        <id>https://kcud.github.io/post/python-pip-shi-you-yu-mu-biao-ji-suan-ji-ji-ji-ju-jue-wu-fa-lian-jie/</id>
        <link href="https://kcud.github.io/post/python-pip-shi-you-yu-mu-biao-ji-suan-ji-ji-ji-ju-jue-wu-fa-lian-jie/">
        </link>
        <updated>2022-05-04T08:14:08.000Z</updated>
        <content type="html"><![CDATA[<p>1、按Win+R快捷键，输入regedit，打开注册表编辑器</p>
<p>2、找到HKEY_CURRENT_USER/Software/Microsoft/Windows/CurrentVersion/Internet Settings</p>
<p>3、将以 Proxy 打头的键值对（如ProxyEnable，ProxyOverride，ProxyServer等）全部删除</p>
]]></content>
    </entry>
    <entry>
        <title type="html"><![CDATA[git]]></title>
        <id>https://kcud.github.io/post/git/</id>
        <link href="https://kcud.github.io/post/git/">
        </link>
        <updated>2022-04-26T13:40:24.000Z</updated>
        <content type="html"><![CDATA[<p>git push -u origin master</p>
]]></content>
    </entry>
    <entry>
        <title type="html"><![CDATA[inno setup 打包exe安装包]]></title>
        <id>https://kcud.github.io/post/inno-setup-da-bao-exe-an-zhuang-bao/</id>
        <link href="https://kcud.github.io/post/inno-setup-da-bao-exe-an-zhuang-bao/">
        </link>
        <updated>2022-04-17T11:23:45.000Z</updated>
        <content type="html"><![CDATA[<h3 id="inno-setup-打包exe安装包">inno setup 打包exe安装包</h3>
<h4 id="生成安装包">生成安装包</h4>
<img src="https://note.youdao.com/yws/api/personal/file/485531EB490848318AB2F963C5CA35C7?method=download&shareKey=3913a68bc81869379a41cd8574011bf6">
<img src="https://note.youdao.com/yws/api/personal/file/0DAD1B51281D42588B9DE6631A579933?method=download&shareKey=3913a68bc81869379a41cd8574011bf6">
<img src="https://note.youdao.com/yws/api/personal/file/49611F67128D48D2B3B2B954A355F707?method=download&shareKey=3913a68bc81869379a41cd8574011bf6">
<img src="https://note.youdao.com/yws/api/personal/file/6E8AE7DB4D9B46F0A14FCF54227EC32F?method=download&shareKey=3913a68bc81869379a41cd8574011bf6">
<img src="https://note.youdao.com/yws/api/personal/file/83A5204F06D24DEE86EEDC7932D455E7?method=download&shareKey=3913a68bc81869379a41cd8574011bf6">
<p>一路next</p>
<img src="https://note.youdao.com/yws/api/personal/file/BB5343D9F4884B92AADB07A21DA30A92?method=download&shareKey=3913a68bc81869379a41cd8574011bf6">
<p>一路next</p>
<h4 id="添加中文安装界面">添加中文安装界面</h4>
<p><a href="https://jrsoftware.org/files/istrans/">官网</a></p>
<p><a href="https://github.com/kira-96/Inno-Setup-Chinese-Simplified-Translation">githube 仓库</a></p>
<p>下载完成解压后ChineseSimplified.isl复制到Inno Setup 6\Languages文件夹下</p>
<p>在[Language]添加</p>
<p>Name: &quot;chinese&quot;; MessagesFile: &quot;compiler:Languages/ChineseSimplified.isl&quot;</p>
<img src="https://note.youdao.com/yws/api/personal/file/C2AF733788AB4CF2B5F57DCAEC56D7D5?method=download&shareKey=3913a68bc81869379a41cd8574011bf6"/>
<p>点击生成</p>
]]></content>
    </entry>
    <entry>
        <title type="html"><![CDATA[pyqt5 基于  Qt Designer 创建可视化GUI程序]]></title>
        <id>https://kcud.github.io/post/pyqt5-ji-yu-qt-designer-chuang-jian-ke-shi-hua-gui-cheng-xu/</id>
        <link href="https://kcud.github.io/post/pyqt5-ji-yu-qt-designer-chuang-jian-ke-shi-hua-gui-cheng-xu/">
        </link>
        <updated>2022-04-16T08:17:55.000Z</updated>
        <content type="html"><![CDATA[<h2 id="pyqt5-基于-qt-designer-创建可视化gui程序">pyqt5 基于  Qt Designer 创建可视化GUI程序</h2>
<p>下载依赖</p>
<pre><code class="language-python">pip install pyqt5-tools
</code></pre>
<pre><code class="language-python">from PyQt5.Qt import *
from PyQt5 import uic
class Stats:

    def __init__(self):
        # 从文件中加载UI定义
        self.ui = uic.loadUi(&quot;../ui/main.ui&quot;) #要加载的ui文件
app = QApplication([])
stats = Stats()
stats.ui.show()
app.exec_()
</code></pre>
]]></content>
    </entry>
    <entry>
        <title type="html"><![CDATA[Python 打包]]></title>
        <id>https://kcud.github.io/post/python-da-bao/</id>
        <link href="https://kcud.github.io/post/python-da-bao/">
        </link>
        <updated>2022-03-31T02:24:57.000Z</updated>
        <content type="html"><![CDATA[<h2 id="打包exe">打包exe</h2>
<pre><code>下载依赖
</code></pre>
<pre><code class="language-python">pip install pyinstaller
</code></pre>
<pre><code>命令
</code></pre>
<pre><code class="language-python">pyinstaller -F -w 程序入口的py文件 #整个打包 不带控制台
pyinstaller -D -c 程序入口的py文件 #打包成文件夹 带控制台
pyinstaller -D -c -i 图标文件路径扩展名为.ico 程序入口的py文件 #打包成文件夹 带控制台
pyinstaller -F -w -i 图标文件路径扩展名为.ico 程序入口的py文件 #打包成exe 不带控制台
</code></pre>
<pre><code>问题
</code></pre>
<figure data-type="image" tabindex="1"><img src="https://note.youdao.com/yws/api/personal/file/60F87E27BFE84C4F809792A5F0EDF9B1?method=download&amp;shareKey=f854293f5f0449a7ee0e5b11190046bf" alt="" loading="lazy"></figure>
<p>检查程序所依赖的外部文件 如：图片、配置文件打包目录是否存在</p>
]]></content>
    </entry>
    <entry>
        <title type="html"><![CDATA[项目管理]]></title>
        <id>https://kcud.github.io/post/xiang-mu-guan-li/</id>
        <link href="https://kcud.github.io/post/xiang-mu-guan-li/">
        </link>
        <updated>2022-03-11T15:14:42.000Z</updated>
        <content type="html"><![CDATA[<h1 id="第一章-软件项目管理概述">第一章 软件项目管理概述</h1>
<h3 id="项目">项目</h3>
<ul>
<li>定义<br>
项目是为了创造一个<strong>唯一</strong>的产品或提供一个唯一的服务而进行的<strong>临时性</strong>的努力</li>
<li>特征
<ul>
<li>有明确的目标</li>
<li>项目之间的活动具有相关性</li>
<li>限定周期</li>
<li>有独立性</li>
<li>资源成本的约束性</li>
<li>项目的不确定性</li>
</ul>
</li>
<li>特殊性
<ul>
<li>逻辑实体</li>
<li>相互作用的系统</li>
<li>渐进明细</li>
<li>变更</li>
</ul>
</li>
</ul>
<h3 id="实现项目目标的制约因素">实现项目目标的制约因素</h3>
<ul>
<li>成本</li>
<li>工作规范</li>
<li>进度计划</li>
<li>客户满意度</li>
</ul>
<h3 id="项目管理的五大过程">项目管理的五大过程</h3>
<figure data-type="image" tabindex="1"><img src="https://note.youdao.com/yws/api/personal/file/FC3F79A48FAE4BEFB8DA81DF93023C1F?method=download&amp;shareKey=26afbc8029c8dbbf91597e6fd729278c" alt="五大过程" loading="lazy"></figure>
<ul>
<li>初始
<ul>
<li>立项</li>
<li>供应商选择</li>
<li>合同签署</li>
</ul>
</li>
<li>计划
<ul>
<li>范围计划</li>
<li>时间计划</li>
<li>成本计划</li>
<li>质量计划</li>
<li>风险计划</li>
<li>沟通计划</li>
<li>人力计划</li>
<li>配置管理计划</li>
<li>合同计划</li>
</ul>
</li>
<li>控制
<ul>
<li>范围控制</li>
<li>时间控制</li>
<li>成本控制</li>
<li>质量控制</li>
<li>风险控制</li>
<li>沟通控制</li>
<li>人力控制</li>
<li>配置管理控制</li>
<li>合同控制</li>
</ul>
</li>
<li>执行
<ol>
<li>需求分析</li>
<li>概要设计</li>
<li>详细设计</li>
<li>编码</li>
<li>单元测试</li>
<li>集成测试</li>
<li>系统测试</li>
<li>维护</li>
<li>提交验收</li>
</ol>
</li>
<li>结束
<ul>
<li>合同结束</li>
<li>项目总结</li>
</ul>
</li>
</ul>
<h3 id="pmbok-10-knowledge-areas">PMBOK 10 Knowledge Areas</h3>
<ul>
<li>范围管理	scope mgt</li>
<li>进度管理 schedule mgt</li>
<li>成本管理 cost mgt</li>
<li>质量管理 quality mgt</li>
<li>干系人管理 stakeholder mgt</li>
<li>集成管理 integration mgt</li>
<li>资源管理 resource mgt</li>
<li>通讯管理 comm mgt</li>
<li>风险管理 rist mgt</li>
<li>采购管理 procurement mgt</li>
</ul>
<h3 id="敏捷模型">敏捷模型</h3>
<ul>
<li>一种灵活的开发方法</li>
<li>用于应对快速变化的需求的开发方法</li>
<li>是一种迭代、循序渐进的开发方法</li>
<li>在敏捷项目重采用仆人式管理方式</li>
</ul>
<h4 id="敏捷宣言">敏捷宣言</h4>
<ul>
<li><strong>个体和互动</strong>高于流程和工具</li>
<li><strong>可工作的软件</strong>高于详尽的文档</li>
<li><strong>用户合作</strong>高于合同谈判</li>
<li><strong>响应变化</strong>高于遵守计划</li>
</ul>
<h4 id="敏捷开发十二原则">敏捷开发十二原则</h4>
<ol>
<li>我们最重要的目标，是通过及早和持续不断地交付有价值的软件使客户满意。</li>
<li>欣然面对需求变化，即使在开发后期也一样。为了客户的竞争优势，敏捷过程掌控变化。</li>
<li>经常地交付可工作的软件，相隔几星期或一两个月，倾向于采取较短的周期。</li>
<li>业务人员和开发人员必须相互合作，项目中的每一天都不例外。</li>
<li>激发个体的斗志，以他们为核心搭建项目。提供所需的环境和支援，辅以信任，从而达成目标。</li>
<li>不论团队内外，传递信息效果最好效率也最高的方式是面对面的交谈。</li>
<li>可工作的软件是进度的首要度量标准。</li>
<li>敏捷过程倡导可持续开发。责任人、开发人员和用户要能够共同维持其步调稳定延续。</li>
<li>坚持不懈地追求技术卓越和良好设计，敏捷能力由此增强。</li>
<li>以简洁为本，它是极力减少不必要工作量的艺术。</li>
<li>最好的架构、需求和设计出自自组织团队。</li>
<li>团队定期地反思如何能提高成效，并依此调整自身的行为表现。</li>
</ol>
<h3 id="软件项目管理过程">软件项目管理过程</h3>
<ol>
<li>项目初始
<ul>
<li>立项明确</li>
<li>生存期</li>
</ul>
</li>
<li>项目计划
<ul>
<li>范围计划</li>
<li>时间计划</li>
<li>成本计划</li>
<li>质量计划</li>
<li>风险计划</li>
<li>沟通计划</li>
<li>人力计划</li>
<li>配置管理计划</li>
<li>合同计划</li>
</ul>
</li>
<li>项目执行控制
<ul>
<li>集成计划执行控制</li>
<li>核心计划执行控制</li>
<li>辅助计划执行控制</li>
</ul>
</li>
<li>项目结束</li>
</ol>
<h1 id="第二章-软件项目确立">第二章 软件项目确立</h1>
<h3 id="项目评估">项目评估</h3>
<ol>
<li>
<p>项目启动背景</p>
<ul>
<li>法律、法规、社会要求</li>
<li>满足相关的需求（用户）</li>
<li>执行、变更业务或战略</li>
<li>创造、改进或修复产品</li>
</ul>
</li>
<li>
<p>可行性分析</p>
<ul>
<li>操作性</li>
<li>计划</li>
<li>技术</li>
<li>社会可行性</li>
<li>市场可行性</li>
<li>经济可行性</li>
<li><strong>战略</strong></li>
</ul>
</li>
<li>
<p><strong>成本效益评价指标</strong></p>
<ul>
<li>
<p>现金预测</p>
<ul>
<li>支出</li>
<li>收益</li>
</ul>
</li>
<li>
<p>净利润</p>
<ul>
<li>整个生命周期内  <strong>总成本  - 总收入</strong></li>
</ul>
</li>
<li>
<p>投资回报期</p>
<ul>
<li>收回成本所花的时间</li>
</ul>
</li>
<li>
<p>投资回报率 (ROI)</p>
<ul>
<li>
<p class='katex-block'><span class="katex-display"><span class="katex"><span class="katex-mathml"><math><semantics><mrow><mfrac><mrow><mi mathvariant="normal">平</mi><mi mathvariant="normal">均</mi><mi mathvariant="normal">年</mi><mi mathvariant="normal">利</mi><mi mathvariant="normal">润</mi></mrow><mrow><mi mathvariant="normal">总</mi><mi mathvariant="normal">投</mi><mi mathvariant="normal">资</mi></mrow></mfrac><mo>×</mo><mn>100</mn><mi mathvariant="normal">%</mi></mrow><annotation encoding="application/x-tex">\frac{平均年利润}{总投资} \times 100\%
</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:1.363em;vertical-align:-0.686em;"></span><span class="mord"><span class="mopen nulldelimiter"></span><span class="mfrac"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.677em;"><span style="top:-2.314em;"><span class="pstrut" style="height:3em;"></span><span class="mord"><span class="mord cjk_fallback">总</span><span class="mord cjk_fallback">投</span><span class="mord cjk_fallback">资</span></span></span><span style="top:-3.23em;"><span class="pstrut" style="height:3em;"></span><span class="frac-line" style="border-bottom-width:0.04em;"></span></span><span style="top:-3.677em;"><span class="pstrut" style="height:3em;"></span><span class="mord"><span class="mord cjk_fallback">平</span><span class="mord cjk_fallback">均</span><span class="mord cjk_fallback">年</span><span class="mord cjk_fallback">利</span><span class="mord cjk_fallback">润</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.686em;"><span></span></span></span></span></span><span class="mclose nulldelimiter"></span></span><span class="mspace" style="margin-right:0.2222222222222222em;"></span><span class="mbin">×</span><span class="mspace" style="margin-right:0.2222222222222222em;"></span></span><span class="base"><span class="strut" style="height:0.80556em;vertical-align:-0.05556em;"></span><span class="mord">1</span><span class="mord">0</span><span class="mord">0</span><span class="mord">%</span></span></span></span></span></p>
</li>
</ul>
</li>
<li>
<p>净现值(NPV)</p>
<ul>
<li>
<p>r 是贴现率  t  现金流在未来出现的年数</p>
</li>
<li>
<p class='katex-block'><span class="katex-display"><span class="katex"><span class="katex-mathml"><math><semantics><mrow><mi>N</mi><mi>P</mi><mi>V</mi><mo>=</mo><mfrac><mrow><mi mathvariant="normal">第</mi><mi>t</mi><mi mathvariant="normal">年</mi><mi mathvariant="normal">的</mi><mi>N</mi><mi>P</mi><mi>V</mi><mi mathvariant="normal">值</mi></mrow><mrow><mo>(</mo><mn>1</mn><mo>+</mo><mi>r</mi><msup><mo>)</mo><mi>t</mi></msup></mrow></mfrac></mrow><annotation encoding="application/x-tex">NPV = \frac{第t年的NPV值}{(1 + r)^t}
</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:0.68333em;vertical-align:0em;"></span><span class="mord mathdefault" style="margin-right:0.10903em;">N</span><span class="mord mathdefault" style="margin-right:0.13889em;">P</span><span class="mord mathdefault" style="margin-right:0.22222em;">V</span><span class="mspace" style="margin-right:0.2777777777777778em;"></span><span class="mrel">=</span><span class="mspace" style="margin-right:0.2777777777777778em;"></span></span><span class="base"><span class="strut" style="height:2.29633em;vertical-align:-0.936em;"></span><span class="mord"><span class="mopen nulldelimiter"></span><span class="mfrac"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:1.36033em;"><span style="top:-2.314em;"><span class="pstrut" style="height:3em;"></span><span class="mord"><span class="mopen">(</span><span class="mord">1</span><span class="mspace" style="margin-right:0.2222222222222222em;"></span><span class="mbin">+</span><span class="mspace" style="margin-right:0.2222222222222222em;"></span><span class="mord mathdefault" style="margin-right:0.02778em;">r</span><span class="mclose"><span class="mclose">)</span><span class="msupsub"><span class="vlist-t"><span class="vlist-r"><span class="vlist" style="height:0.7195559999999999em;"><span style="top:-2.9890000000000003em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mathdefault mtight">t</span></span></span></span></span></span></span></span></span></span><span style="top:-3.23em;"><span class="pstrut" style="height:3em;"></span><span class="frac-line" style="border-bottom-width:0.04em;"></span></span><span style="top:-3.677em;"><span class="pstrut" style="height:3em;"></span><span class="mord"><span class="mord cjk_fallback">第</span><span class="mord mathdefault">t</span><span class="mord cjk_fallback">年</span><span class="mord cjk_fallback">的</span><span class="mord mathdefault" style="margin-right:0.10903em;">N</span><span class="mord mathdefault" style="margin-right:0.13889em;">P</span><span class="mord mathdefault" style="margin-right:0.22222em;">V</span><span class="mord cjk_fallback">值</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.936em;"><span></span></span></span></span></span><span class="mclose nulldelimiter"></span></span></span></span></span></span></p>
</li>
</ul>
</li>
<li>
<p>内部回报率(IRR)</p>
</li>
</ul>
</li>
</ol>
<h3 id="swot-分析">SWOT 分析</h3>
<ul>
<li>优势</li>
<li>威胁</li>
<li>劣势</li>
<li>机遇</li>
</ul>
<h3 id="立项">立项</h3>
<ul>
<li>目标</li>
<li>费用</li>
<li>时间</li>
</ul>
<h3 id="项目招标">项目招标</h3>
<ul>
<li>甲方招标书定义
<ul>
<li><img src="https://note.youdao.com/yws/api/personal/file/82608F868FCC4200A1EFD6731F0C1DE0?method=download&amp;shareKey=5881c812bba6b600c87f9d65cb94952e" alt="招标书定义过程" loading="lazy"></li>
</ul>
</li>
<li>乙方项目分析
<ul>
<li><img src="https://note.youdao.com/yws/api/personal/file/C19AEE0EA4804800B24C7C9D0BD9AF6D?method=download&amp;shareKey=97e89c3d1920bcc40d28c7ad9abe0f6b" alt="" loading="lazy"></li>
</ul>
</li>
<li>招标与竞标</li>
<li>合同签署</li>
</ul>
<h3 id="项目章程">项目章程</h3>
<ul>
<li>项目的确认</li>
<li>项目经理的确认</li>
<li>项目目的的概述</li>
</ul>
<h3 id="pmi-人才">PMI 人才</h3>
<ul>
<li>技术项目管理</li>
<li>领导力</li>
<li>战略和商务管理</li>
</ul>
<h1 id="生存期模型">生存期模型</h1>
<h2 id="变迁">变迁</h2>
<figure data-type="image" tabindex="4"><img src="https://note.youdao.com/yws/api/personal/file/D086C193278C46BCA4E96323E7558A76?method=download&amp;shareKey=3e906ba31a12c1dde8ee5c0b65248748" alt="" loading="lazy"></figure>
<h2 id="生存期模型类型">生存期模型类型</h2>
<ul>
<li>预测型
<ul>
<li>瀑布模型
<ul>
<li>需求明确   方案明确</li>
<li>短期项目</li>
</ul>
</li>
<li>V模型（瀑布的改良）
<ul>
<li>需求明确   方案明确</li>
<li>系统性能、安全等有严格要求等</li>
</ul>
</li>
<li>提前进行大量计划工作，然后一次性执行；执行为一个连续的过程</li>
</ul>
</li>
<li>适应型
<ul>
<li>迭代型（原型模型）
<ul>
<li>需求不明确   项目复杂性高  项目变更频繁</li>
<li>允许对未完成的工作进行反馈，改进、修改工作</li>
</ul>
</li>
<li>增量型
<ul>
<li>向用户提供各个已完成，可能立即使用的可交付成果</li>
</ul>
</li>
<li>敏捷型
<ul>
<li>Scrum模型（代表）</li>
<li>XP极限编程模型
<ul>
<li><img src="https://note.youdao.com/yws/api/personal/file/4CA17B5438B64F65A6887C3D419753A2?method=download&amp;shareKey=71a1e0ede4c8f4f71d7314c3dea02d98" alt="" loading="lazy"></li>
</ul>
</li>
<li>精益模型</li>
<li>DevOps</li>
<li>有迭代有增量，便于完善工作，频繁交付</li>
</ul>
</li>
</ul>
</li>
</ul>
<figure data-type="image" tabindex="6"><img src="https://note.youdao.com/yws/api/personal/file/30EAF68BEC084CE58269950AF11628BB?method=download&amp;shareKey=146ff1ed2fe6316de24b388dcdd466c5" alt="" loading="lazy"></figure>
<table>
<thead>
<tr>
<th>方法</th>
<th>需求</th>
<th>活动</th>
<th>提交</th>
<th>目标</th>
</tr>
</thead>
<tbody>
<tr>
<td>预测型</td>
<td>固定</td>
<td>整个活动只执行一次</td>
<td>一次</td>
<td>成本可管理</td>
</tr>
<tr>
<td>迭代型</td>
<td>变化</td>
<td>一直重复执行到正确为止</td>
<td>一次</td>
<td>正确的解决方案</td>
</tr>
<tr>
<td>增量型</td>
<td>变化</td>
<td>每个特定得的活动执行一次</td>
<td>频繁小增量提交</td>
<td>速度</td>
</tr>
<tr>
<td>敏捷型</td>
<td>变化</td>
<td>一直重复执行到正确为止</td>
<td>频繁小增量提交</td>
<td>通过频繁提交和反馈体现客户价值</td>
</tr>
</tbody>
</table>
]]></content>
    </entry>
    <entry>
        <title type="html"><![CDATA[Ajax]]></title>
        <id>https://kcud.github.io/post/ajax/</id>
        <link href="https://kcud.github.io/post/ajax/">
        </link>
        <updated>2022-01-16T15:09:41.000Z</updated>
        <content type="html"><![CDATA[<h1 id="spring-下的-ajax"><strong>Spring 下的 Ajax</strong></h1>
<h1 id="code">code</h1>
<pre><code class="language-java">//User

public class User {
    private String name;
    private String sex;
    //省略get set toString 方法
}

</code></pre>
<p>要添加spring依赖</p>
<pre><code class="language-java">//Controller类
@Controller
@RequestMapping(&quot;/ajax&quot;)
public class AjaxController {
    //第一种方式，服务器要返回一个字符串，直接使用response
    @RequestMapping(&quot;/a1&quot;)
    public void ajax1(String name, HttpServletResponse response){
        try{
            if(&quot;admin&quot;.equals(name)){
                response.getWriter().print(&quot;true&quot;);
            }else{
                response.getWriter().print(&quot;false&quot;);
            }
        }catch (Exception e){
            e.printStackTrace();
        }
    }
    @RequestMapping(&quot;/a2&quot;)
    @ResponseBody
    public List a2(){
        List&lt;User&gt; list = new ArrayList&lt;User&gt;();
        User user = new User();
        user.setName(&quot;Flower&quot;);
        user.setSex(&quot;male&quot;);
        list.add(user);
        return list;
    }
}
</code></pre>
<p>导入jquery.js文件</p>
<pre><code class="language-javascript">//方法1：导入本地文件
&lt;script src=&quot;https://code.jquery.com/jquery-3.6.0.js&quot;&gt;&lt;/script&gt;	 
/*不要使用&lt;script/&gt;自闭合*/

//方法2：使用http资源
&lt;script src=&quot;https://code.jquery.com/jquery-3.6.0.js&quot;&gt;&lt;/script&gt;
</code></pre>
<pre><code class="language-javascript">function a1(){
	$.ajax({
		type:&quot;Post&quot;,	//.ajax默认为Get请求	可以通过type修改请求方式 更常用$.post
		url:&quot;${pageContext.request.contextPath}/ajax/a1&quot;,
		data:{&quot;name&quot;:$(txtName).val()},
		success(data){
		console.log(data);
		}
});
</code></pre>
<pre><code class="language-javascript">function a2(){
	var html=&quot;&quot;;

	$.ajax({
		url:&quot;${pageContext.request.contextPath}/ajax/a2&quot;,
		success(data){
            var html = &quot;&quot;;
            console.log(data);
            for(var i = 0; i&lt; data.length; i++){
                html  += &quot;&lt;tr&gt;&quot;+
                &quot;&lt;td&gt;&quot;+data[i].name+&quot;&lt;/td&gt;&quot;+
                &quot;&lt;td&gt;&quot;+data[i].sex+&quot;&lt;/td&gt;&quot;+
                &quot;&lt;/tr&gt;&quot;;
            }
            $(&quot;#tableBody&quot;).html(html);
        }
    });
}

</code></pre>
<h3 id="找不到jquery文件"><strong>找不到jquery文件</strong></h3>
<p><strong>错误表现</strong></p>
<pre><code class="language-java">GET http://localhost:8080/ajax_war_exploded/statics/js/jquery-3.6.0.js net::ERR_ABORTED 404
</code></pre>
<pre><code class="language-html">&lt;!--在springmvc-config.xmlspringmvc-config.xml添加 js没找到--&gt;
&lt;mvc:resources location=&quot;/statics/js/&quot; mapping=&quot;/statics/js/**&quot;&gt;&lt;/mvc:resources&gt;
</code></pre>
<h3 id="json数据获取失败"><strong>json数据获取失败</strong></h3>
<p><strong>错误表现</strong></p>
<img src="https://note.youdao.com/yws/api/personal/file/561D585033374F4A9C55763445E1494A?method=download&shareKey=9b387214ab725842e33981b6cc8f3256"/>
<h3 id=""></h3>
<pre><code class="language-html">@ResponseBody 转json数据失败 在pom.xml添加依赖--&gt;
&lt;dependency&gt;
      &lt;groupId&gt;com.fasterxml.jackson.core&lt;/groupId&gt;
      &lt;artifactId&gt;jackson-databind&lt;/artifactId&gt;
      &lt;version&gt;2.13.0&lt;/version&gt;
&lt;/dependency&gt;
</code></pre>
<h3 id="ajaxa2访问404"><strong>/ajax/a2访问404</strong></h3>
<p><strong>错误表现</strong></p>
<img src="https://note.youdao.com/yws/api/personal/file/B421096406464C4CBED4ABE1198DE78F?method=download&shareKey=bfdc8aab9567f691c5e8954a7f217c4a"/>
<pre><code class="language-html">&lt;!--在springmvc-config.xmlspringmvc-config.xml添加--&gt;&lt;mvc:annotation-driven&gt;&lt;/mvc:annotation-driven&gt;
</code></pre>
<h1 id="故障再现">故障再现</h1>
<h3 id="移出maven后包缓存仍在项目中">移出maven后包缓存仍在项目中</h3>
<p>maven-&gt;生命周期-&gt;clean</p>
<p><img src="https://note.youdao.com/yws/api/personal/file/20E77A41283F4C778634E0FB2EF8D2E3?method=download&shareKey=03ebca3d791afbc3d923bda922bdd349"/><img src="https://note.youdao.com/yws/api/personal/file/A16326019E874275A5DB210D347B6D5B?method=download&shareKey=08a88d872e8d268bb5ec55c3acec8397"/></p>
]]></content>
    </entry>
</feed>